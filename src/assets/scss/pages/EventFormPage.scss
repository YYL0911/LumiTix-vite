// select箭頭黑色樣式
.select-dark-arrow {
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='currentColor' viewBox='0 0 16 16'%3e%3cpath d='M7.247 11.14 2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z'/%3e%3c/svg%3e") !important;
  background-repeat: no-repeat;
  background-position: right 0.75rem center; 
  background-size: 10px 10px; 
}

// 設定整個日期選擇器的外框樣式
.react-datepicker {
  border: 1px solid #dee2e6 !important;
  border-radius: 0.5rem !important;
  font-family: inherit !important;
}
// 設定日期選擇器上方的標頭區域（包含月份與星期）
.react-datepicker__header {
  background-color: #f8f9fa !important;
  border-bottom: 1px solid #dee2e6 !important;
  border-radius: 0.5rem 0.5rem 0 0 !important;
}
// 設定目前顯示的月份文字（例如：June 2025）
.react-datepicker__current-month {
  color: #495057 !important;
  font-weight: 500 !important;
}
// 設定星期幾（Sun, Mon...）的樣式
.react-datepicker__day-name {
  color: #495057 !important;
  font-weight: 500 !important;
}
// 設定一般日期（天）的樣式
.react-datepicker__day {
  color: #495057 !important;
  border-radius: 50% !important;
  transition: all 0.2s ease !important;
}
// 當滑鼠移到日期上時的樣式
.react-datepicker__day:hover {
  background-color: #fd7e14 !important;
}
// 設定被選取的日期樣式
.react-datepicker__day--selected {
  background-color: #fd7e14 !important;
  color: white !important;
}
// 當滑鼠移到已選取的日期上時
.react-datepicker__day--selected:hover {
  background-color: #e8690b !important;
}
// 設定非當月的日期（灰階顯示）
.react-datepicker__day--outside-month {
  color: #adb5bd !important;
}
// 設定左右導覽箭頭的位置（用來切換月份）
.react-datepicker__navigation {
  top: 1rem !important;
}
// 左側上一個月的箭頭樣式
.react-datepicker__navigation--previous {
  border-right-color: #6c757d !important;
}
// 右側下一個月的箭頭樣式
.react-datepicker__navigation--next {
  border-left-color: #6c757d !important;
}
// --- 自訂 React Datepicker 時間列表選中項樣式 ---
.react-datepicker__time-container {
  .react-datepicker__time {
    .react-datepicker__time-box {
      ul.react-datepicker__time-list {
        li.react-datepicker__time-list-item--selected {
          background-color: #fd7e14 !important; // 您期望的紅色系背景
          color: white !important;             // 文字顏色改為白色
          font-weight: bold; // 可以加粗
        }

        // 如果還想調整未選中時間項目的滑鼠懸停效果
        li.react-datepicker__time-list-item:not(.react-datepicker__time-list-item--disabled):hover {
          background-color: #f0f0f0 !important; // 範例：淺灰色背景
        }
      }
    }
  }
}
// --- 自訂 React Datepicker 清除按鈕 "X" 的顏色 ---
.react-datepicker__close-icon {
  &::after {
    background-color: transparent !important; // 先移除可能的背景色
    color: #fd7e14 !important;                 // 將 "X" 的內容顏色設為紅色
    font-size: 20px; // 可以微調 "X" 的大小
  }

  &:hover {
    &::after {
      color: #D9534F !important; // 滑鼠懸停時的深紅色
    }
  }
}
// 目標是 .form-check-input (radio button 本身)
.form-check-input {
  &:checked {
    // 當 radio button 被選中時
    background-color: #D9534F; // 設計稿上的紅色 (請用色彩選擇器確認精確色碼)
    border-color: #D9534F;     // 邊框也設為同樣的紅色
  }
  // 調整 radio button 的 focus 陰影 (可選，如果預設的藍色陰影不搭)
  &:focus {
    box-shadow: 0 0 0 0.25rem rgba(217, 83, 79, 0.25); // 紅色系的 focus 陰影
  }
}
// 目標是與被選中的 radio button 相關聯的 .form-check-label
.form-check-input:checked + .form-check-label {
  color: #D9534F; // 設計稿上的紅色 (請用色彩選擇器確認精確色碼)
  font-weight: bold; // 如果需要加粗文字
}
.custom-drag-overlay-item {
  background-color: #fd7e14; // 您想要的背景色
  opacity: 0.4;
}
// 針對有 .is-invalid class 的 .form-control
.form-control.is-invalid, .was-validated .form-control:invalid {
  background-image: none !important; // 移除背景圖示
  padding-right: 0.75rem !important;  // 將右邊的內距恢復正常，避免 X 按鈕偏移
}
